{"version":3,"sources":["components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","components/Feedback/Feedback.jsx","components/App/App.jsx","index.js"],"names":["Statistics","good","neutral","bad","total","positivePercentage","className","FeedbackOptions","options","onLeaveFeedback","map","id","label","type","onClick","Section","title","children","Notification","message","Feedback","useState","setGood","setNeutral","setBad","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","console","warn","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+SAsCeA,G,MApCI,SAAC,GAAuD,IAArDC,EAAoD,EAApDA,KAAMC,EAA8C,EAA9CA,QAASC,EAAqC,EAArCA,IAAKC,EAAgC,EAAhCA,MAAOC,EAAyB,EAAzBA,mBAC/C,OACE,gCACE,4CACA,qBAAIC,UAAU,OAAd,UACE,qBAAIA,UAAU,OAAd,UACE,yCACA,+BAAOL,OAET,qBAAIK,UAAU,OAAd,UACE,4CACA,+BAAOJ,OAET,qBAAII,UAAU,OAAd,UACE,wCACA,+BAAOH,OAET,qBAAIG,UAAU,OAAd,UACE,0CACA,+BAAOF,OAET,qBAAIE,UAAU,OAAd,UACE,sDACA,iCAAOD,EAAP,kBCOKE,G,MA9BS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAClC,OACE,8BACGD,EAAQE,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,GAAIC,EAAY,EAAZA,MAClB,OACE,wBACEN,UAAU,SAEVO,KAAK,SACLC,QAAS,WACPL,EAAgBG,IALpB,SAQGA,GANID,UCMFI,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCGQC,EARM,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACtB,OAAO,6BAAKA,KCKRX,EAAU,CACd,CAAEG,GAAI,OAAQC,MAAO,QACrB,CAAED,GAAI,OAAQC,MAAO,WACrB,CAAED,GAAI,OAAQC,MAAO,QA8CRQ,MA3Cf,WAAqB,IAAD,EACMC,mBAAS,GADf,mBACXpB,EADW,KACLqB,EADK,OAEYD,mBAAS,GAFrB,mBAEXnB,EAFW,KAEFqB,EAFE,OAGIF,mBAAS,GAHb,mBAGXlB,EAHW,KAGNqB,EAHM,KAoBZC,EAAqBxB,EAAOC,EAAUC,EACtCuB,EAAkCC,KAAKC,MACnC,IAAP3B,EAAcwB,GAGjB,OACE,eAAC,EAAD,CAAST,MAAM,wBAAf,UACE,cAAC,EAAD,CAAiBR,QAASA,EAASC,gBAtBb,SAAAG,GACxB,OAAQA,GACN,IAAK,OACHU,EAAQrB,EAAO,GACf,MACF,IAAK,UACHsB,EAAWrB,EAAU,GACrB,MACF,IAAK,MACHsB,EAAOrB,EAAM,GACb,MACF,QACE0B,QAAQC,KAAK,2BAWS,IAAvBL,EACC,cAAC,EAAD,CAAcN,QAAQ,yBAEtB,cAAC,EAAD,CACElB,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOqB,EACPpB,mBAAoBqB,QCrCfK,MARf,WACE,OACE,qBAAKzB,UAAU,MAAf,SACE,cAAC,EAAD,OCFN0B,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.d53c98c6.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\nimport './Statistics.css';\nconst Statistics = ({ good, neutral, bad, total, positivePercentage }) => {\n  return (\n    <div>\n      <h2>Statistics</h2>\n      <ul className=\"list\">\n        <li className=\"item\">\n          <span>Good:</span>\n          <span>{good}</span>\n        </li>\n        <li className=\"item\">\n          <span>Neutral:</span>\n          <span>{neutral}</span>\n        </li>\n        <li className=\"item\">\n          <span>Bad:</span>\n          <span>{bad}</span>\n        </li>\n        <li className=\"item\">\n          <span>Total:</span>\n          <span>{total}</span>\n        </li>\n        <li className=\"item\">\n          <span>Positive feedback:</span>\n          <span>{positivePercentage}%</span>\n        </li>\n      </ul>\n    </div>\n  );\n};\nStatistics.propTypes = {\n  good: PropTypes.number.isRequired,\n  neutral: PropTypes.number.isRequired,\n  bad: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired,\n  positivePercentage: PropTypes.number.isRequired,\n};\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport './FeedbackOptions.css';\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\n  return (\n    <div>\n      {options.map(({ id, label }) => {\n        return (\n          <button\n            className=\"button\"\n            key={id}\n            type=\"button\"\n            onClick={() => {\n              onLeaveFeedback(label);\n            }}\n          >\n            {label}\n          </button>\n        );\n      })}\n    </div>\n  );\n};\nFeedbackOptions.propTypes = {\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n    }),\n  ),\n  onLeaveFeedback: PropTypes.func.isRequired,\n};\n\nexport default FeedbackOptions;\n","import PropTypes from 'prop-types';\n\nconst Section = ({ title, children }) => {\n  return (\n    <section>\n      <h1>{title}</h1>\n      {children}\n    </section>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\nexport default Section;\n","import PropTypes from 'prop-types';\nconst Notification = ({ message }) => {\n  return <h2>{message}</h2>;\n};\n\nNotification.propTypes = {\n  message: PropTypes.string.isRequired,\n};\n\nexport default Notification;\n","import React, { useState } from 'react';\n\nimport Statistics from '../Statistics/Statistics';\nimport FeedbackOptions from '../FeedbackOptions/FeedbackOptions';\nimport Section from '../Section/Section';\nimport Notification from '../Notification/Notification';\n\nconst options = [\n  { id: 'id-1', label: 'good' },\n  { id: 'id-2', label: 'neutral' },\n  { id: 'id-3', label: 'bad' },\n];\n\nfunction Feedback() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleButtonClick = label => {\n    switch (label) {\n      case 'good':\n        setGood(good + 1);\n        break;\n      case 'neutral':\n        setNeutral(neutral + 1);\n        break;\n      case 'bad':\n        setBad(bad + 1);\n        break;\n      default:\n        console.warn('Invalid button type');\n    }\n  };\n  const countTotalFeedback = good + neutral + bad;\n  const countPositiveFeedbackPercentage = Math.round(\n    (good * 100) / countTotalFeedback,\n  );\n\n  return (\n    <Section title=\"Please leave feedback\">\n      <FeedbackOptions options={options} onLeaveFeedback={handleButtonClick} />\n      {countTotalFeedback === 0 ? (\n        <Notification message=\"No feedback messages\" />\n      ) : (\n        <Statistics\n          good={good}\n          neutral={neutral}\n          bad={bad}\n          total={countTotalFeedback}\n          positivePercentage={countPositiveFeedbackPercentage}\n        />\n      )}\n    </Section>\n  );\n}\n\nexport default Feedback;\n","// import logo from '../logo.svg';\nimport './App.css';\nimport Feedback from '../Feedback/Feedback';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Feedback />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}